// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Station station
//
// swagger:model Station
type Station struct {

	// connected
	Connected bool `json:"connected,omitempty"`

	// device identification
	DeviceIdentification *DeviceIdentification1 `json:"deviceIdentification,omitempty"`

	// Distance in meters.
	// Example: 100
	Distance int64 `json:"distance,omitempty"`

	// downlink capacity
	DownlinkCapacity int64 `json:"downlinkCapacity,omitempty"`

	// firmware
	Firmware *DeviceFirmware `json:"firmware,omitempty"`

	// Interface name, where the station is connected.
	// Example: wlan0
	InterfaceID string `json:"interfaceId,omitempty"`

	// Custom IP address in IPv4 or IPv6 format.
	// Example: 192.168.1.22
	IPAddress string `json:"ipAddress,omitempty"`

	// Latency in milliseconds.
	// Example: 10
	Latency int64 `json:"latency,omitempty"`

	// mac
	// Pattern: ^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$
	Mac string `json:"mac,omitempty"`

	// Short names, for example UF-OLT.
	// Enum: [UF-Nano UF-Loco UF-Wifi UF-Instant UF-OLT UF-OLT4 UNMS-R-PRO UNMS-R-Lite UNMS-S-Lite ER-X ER-X-SFP ERLite-3 ERPoe-5 ERPro-8 ER-8 ER-8-XG ER-4 ER-6P ER-12 ER-12P ER-10X EP-R8 EP-R6 EP-S16 ES-12F ES-16-150W ES-24-250W ES-24-500W ES-24-Lite ES-48-500W ES-48-750W ES-48-Lite ES-8-150W ES-16-XG ES-10XP ES-10X ES-18X ES-26X EP-54V-150W EP-24V-72W EP-54V-72W TSW-PoE TSW-PoE PRO ACB-AC ACB-ISP ACB-LOCO AF11FX AF24 AF24HD AF2X AF3X AF4X AF5 AF5U AF5X AF-5XHD AF-LTU LTU-LITE AF-LTU5 LTU-Rocket AFLTULR AF60 AF60-LR WaveAP WaveCPE GBE-LR GBE GBE-Plus GBE-AP R2N R2T R5N R6N R36-GPS RM3-GPS R2N-GPS R5N-GPS R9N-GPS R5T-GPS RM3 R36 R9N N2N N5N N6N NS3 N36 N9N N9S LM2 LM5 B2N B2T B5N B5T BAC AG2 AG2-HP AG5 AG5-HP p2N p5N M25 P2B-400 P5B-300 P5B-300-ISO P5B-400 P5B-400-ISO P5B-620 LB5-120 LB5 N5B N5B-16 N5B-19 N5B-300 N5B-400 N5B-Client N2B N2B-13 N2B-400 PAP LAP-HP LAP AGW AGW-LR AGW-Pro AGW-Installer PB5 PB3 P36 PBM10 NB5 NB2 NB3 B36 NB9 SM5 WM5 IS-M5 Loco5AC NS-5AC R5AC-PTMP R5AC-PTP R5AC-Lite R5AC-PRISM R2AC-Prism R2AC-Gen2 RP-5AC-Gen2 NBE-2AC-13 NBE-5AC-16 NBE-5AC-19 NBE-5AC-Gen2 PBE-5AC-300 PBE-5AC-300-ISO PBE-5AC-400 PBE-5AC-400-ISO PBE-5AC-500 PBE-5AC-500-ISO PBE-5AC-620 PBE-5AC-620-ISO PBE-2AC-400 PBE-2AC-400-ISO PBE-5AC-X-Gen2 PBE-5AC-Gen2 PBE-5AC-ISO-Gen2 PBE-5AC-400-ISO-Gen2 LBE-5AC-16-120 LAP-120 LBE-5AC-23 LBE-5AC-Gen2 LBE-5AC-LR LAP-GPS IS-5AC PS-5AC SolarSwitch SolarPoint BulletAC-IP67 B-DB-AC UNKNOWN]
	Model string `json:"model,omitempty"`

	// name
	// Example: lab-ISM5-1
	Name string `json:"name,omitempty"`

	// Wireless noise level in dBm
	// Example: -84
	// Required: true
	NoiseFloor *int64 `json:"noiseFloor"`

	// radio
	// Enum: [2.4GHz 3GHz 4GHz 5GHz 11GHz 24GHz 60GHz]
	Radio string `json:"radio,omitempty"`

	// Received bytes.
	// Example: 926000
	RxBytes int64 `json:"rxBytes,omitempty"`

	// rx chain
	// Required: true
	RxChain RxChain `json:"rxChain"`

	// rx chain mask
	// Example: 2
	// Required: true
	RxChainMask *int64 `json:"rxChainMask"`

	// Local Rx data rate.
	// Example: 8
	RxModulation string `json:"rxModulation,omitempty"`

	// Current download speed in bps.
	// Example: 456
	RxRate int64 `json:"rxRate,omitempty"`

	// Local Signal in dBm.
	// Example: -44
	RxSignal int64 `json:"rxSignal,omitempty"`

	// statistics
	Statistics *Statistics `json:"statistics,omitempty"`

	// timestamp
	// Example: 2018-11-14T15:20:32.004Z
	// Format: date
	Timestamp strfmt.Date `json:"timestamp,omitempty"`

	// Transmitted/Sent bytes.
	// Example: 436000
	TxBytes int64 `json:"txBytes,omitempty"`

	// tx chain
	// Required: true
	TxChain TxChain `json:"txChain"`

	// tx chain mask
	// Example: 2
	// Required: true
	TxChainMask *int64 `json:"txChainMask"`

	// Remote Rx data rate.
	// Example: 8
	TxModulation string `json:"txModulation,omitempty"`

	// Current download speed in bps.
	// Example: 325
	TxRate int64 `json:"txRate,omitempty"`

	// Remote Signal in dBm.
	// Example: -39
	TxSignal int64 `json:"txSignal,omitempty"`

	// uplink capacity
	UplinkCapacity int64 `json:"uplinkCapacity,omitempty"`

	// uptime
	Uptime int64 `json:"uptime,omitempty"`

	// vendor
	// Example: Ubiquiti Networks
	Vendor string `json:"vendor,omitempty"`
}

// Validate validates this station
func (m *Station) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDeviceIdentification(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFirmware(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMac(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateModel(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNoiseFloor(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRadio(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRxChain(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRxChainMask(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatistics(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTimestamp(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTxChain(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTxChainMask(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Station) validateDeviceIdentification(formats strfmt.Registry) error {
	if swag.IsZero(m.DeviceIdentification) { // not required
		return nil
	}

	if m.DeviceIdentification != nil {
		if err := m.DeviceIdentification.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("deviceIdentification")
			}
			return err
		}
	}

	return nil
}

func (m *Station) validateFirmware(formats strfmt.Registry) error {
	if swag.IsZero(m.Firmware) { // not required
		return nil
	}

	if m.Firmware != nil {
		if err := m.Firmware.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("firmware")
			}
			return err
		}
	}

	return nil
}

func (m *Station) validateMac(formats strfmt.Registry) error {
	if swag.IsZero(m.Mac) { // not required
		return nil
	}

	if err := validate.Pattern("mac", "body", string(m.Mac), `^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$`); err != nil {
		return err
	}

	return nil
}

var stationTypeModelPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["UF-Nano","UF-Loco","UF-Wifi","UF-Instant","UF-OLT","UF-OLT4","UNMS-R-PRO","UNMS-R-Lite","UNMS-S-Lite","ER-X","ER-X-SFP","ERLite-3","ERPoe-5","ERPro-8","ER-8","ER-8-XG","ER-4","ER-6P","ER-12","ER-12P","ER-10X","EP-R8","EP-R6","EP-S16","ES-12F","ES-16-150W","ES-24-250W","ES-24-500W","ES-24-Lite","ES-48-500W","ES-48-750W","ES-48-Lite","ES-8-150W","ES-16-XG","ES-10XP","ES-10X","ES-18X","ES-26X","EP-54V-150W","EP-24V-72W","EP-54V-72W","TSW-PoE","TSW-PoE PRO","ACB-AC","ACB-ISP","ACB-LOCO","AF11FX","AF24","AF24HD","AF2X","AF3X","AF4X","AF5","AF5U","AF5X","AF-5XHD","AF-LTU","LTU-LITE","AF-LTU5","LTU-Rocket","AFLTULR","AF60","AF60-LR","WaveAP","WaveCPE","GBE-LR","GBE","GBE-Plus","GBE-AP","R2N","R2T","R5N","R6N","R36-GPS","RM3-GPS","R2N-GPS","R5N-GPS","R9N-GPS","R5T-GPS","RM3","R36","R9N","N2N","N5N","N6N","NS3","N36","N9N","N9S","LM2","LM5","B2N","B2T","B5N","B5T","BAC","AG2","AG2-HP","AG5","AG5-HP","p2N","p5N","M25","P2B-400","P5B-300","P5B-300-ISO","P5B-400","P5B-400-ISO","P5B-620","LB5-120","LB5","N5B","N5B-16","N5B-19","N5B-300","N5B-400","N5B-Client","N2B","N2B-13","N2B-400","PAP","LAP-HP","LAP","AGW","AGW-LR","AGW-Pro","AGW-Installer","PB5","PB3","P36","PBM10","NB5","NB2","NB3","B36","NB9","SM5","WM5","IS-M5","Loco5AC","NS-5AC","R5AC-PTMP","R5AC-PTP","R5AC-Lite","R5AC-PRISM","R2AC-Prism","R2AC-Gen2","RP-5AC-Gen2","NBE-2AC-13","NBE-5AC-16","NBE-5AC-19","NBE-5AC-Gen2","PBE-5AC-300","PBE-5AC-300-ISO","PBE-5AC-400","PBE-5AC-400-ISO","PBE-5AC-500","PBE-5AC-500-ISO","PBE-5AC-620","PBE-5AC-620-ISO","PBE-2AC-400","PBE-2AC-400-ISO","PBE-5AC-X-Gen2","PBE-5AC-Gen2","PBE-5AC-ISO-Gen2","PBE-5AC-400-ISO-Gen2","LBE-5AC-16-120","LAP-120","LBE-5AC-23","LBE-5AC-Gen2","LBE-5AC-LR","LAP-GPS","IS-5AC","PS-5AC","SolarSwitch","SolarPoint","BulletAC-IP67","B-DB-AC","UNKNOWN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		stationTypeModelPropEnum = append(stationTypeModelPropEnum, v)
	}
}

const (

	// StationModelUFMinusNano captures enum value "UF-Nano"
	StationModelUFMinusNano string = "UF-Nano"

	// StationModelUFMinusLoco captures enum value "UF-Loco"
	StationModelUFMinusLoco string = "UF-Loco"

	// StationModelUFMinusWifi captures enum value "UF-Wifi"
	StationModelUFMinusWifi string = "UF-Wifi"

	// StationModelUFMinusInstant captures enum value "UF-Instant"
	StationModelUFMinusInstant string = "UF-Instant"

	// StationModelUFMinusOLT captures enum value "UF-OLT"
	StationModelUFMinusOLT string = "UF-OLT"

	// StationModelUFMinusOLT4 captures enum value "UF-OLT4"
	StationModelUFMinusOLT4 string = "UF-OLT4"

	// StationModelUNMSMinusRMinusPRO captures enum value "UNMS-R-PRO"
	StationModelUNMSMinusRMinusPRO string = "UNMS-R-PRO"

	// StationModelUNMSMinusRMinusLite captures enum value "UNMS-R-Lite"
	StationModelUNMSMinusRMinusLite string = "UNMS-R-Lite"

	// StationModelUNMSMinusSMinusLite captures enum value "UNMS-S-Lite"
	StationModelUNMSMinusSMinusLite string = "UNMS-S-Lite"

	// StationModelERMinusX captures enum value "ER-X"
	StationModelERMinusX string = "ER-X"

	// StationModelERMinusXMinusSFP captures enum value "ER-X-SFP"
	StationModelERMinusXMinusSFP string = "ER-X-SFP"

	// StationModelERLiteMinus3 captures enum value "ERLite-3"
	StationModelERLiteMinus3 string = "ERLite-3"

	// StationModelERPoeMinus5 captures enum value "ERPoe-5"
	StationModelERPoeMinus5 string = "ERPoe-5"

	// StationModelERProMinus8 captures enum value "ERPro-8"
	StationModelERProMinus8 string = "ERPro-8"

	// StationModelERMinus8 captures enum value "ER-8"
	StationModelERMinus8 string = "ER-8"

	// StationModelERMinus8MinusXG captures enum value "ER-8-XG"
	StationModelERMinus8MinusXG string = "ER-8-XG"

	// StationModelERMinus4 captures enum value "ER-4"
	StationModelERMinus4 string = "ER-4"

	// StationModelERMinus6P captures enum value "ER-6P"
	StationModelERMinus6P string = "ER-6P"

	// StationModelERMinus12 captures enum value "ER-12"
	StationModelERMinus12 string = "ER-12"

	// StationModelERMinus12P captures enum value "ER-12P"
	StationModelERMinus12P string = "ER-12P"

	// StationModelERMinus10X captures enum value "ER-10X"
	StationModelERMinus10X string = "ER-10X"

	// StationModelEPMinusR8 captures enum value "EP-R8"
	StationModelEPMinusR8 string = "EP-R8"

	// StationModelEPMinusR6 captures enum value "EP-R6"
	StationModelEPMinusR6 string = "EP-R6"

	// StationModelEPMinusS16 captures enum value "EP-S16"
	StationModelEPMinusS16 string = "EP-S16"

	// StationModelESMinus12F captures enum value "ES-12F"
	StationModelESMinus12F string = "ES-12F"

	// StationModelESMinus16Minus150W captures enum value "ES-16-150W"
	StationModelESMinus16Minus150W string = "ES-16-150W"

	// StationModelESMinus24Minus250W captures enum value "ES-24-250W"
	StationModelESMinus24Minus250W string = "ES-24-250W"

	// StationModelESMinus24Minus500W captures enum value "ES-24-500W"
	StationModelESMinus24Minus500W string = "ES-24-500W"

	// StationModelESMinus24MinusLite captures enum value "ES-24-Lite"
	StationModelESMinus24MinusLite string = "ES-24-Lite"

	// StationModelESMinus48Minus500W captures enum value "ES-48-500W"
	StationModelESMinus48Minus500W string = "ES-48-500W"

	// StationModelESMinus48Minus750W captures enum value "ES-48-750W"
	StationModelESMinus48Minus750W string = "ES-48-750W"

	// StationModelESMinus48MinusLite captures enum value "ES-48-Lite"
	StationModelESMinus48MinusLite string = "ES-48-Lite"

	// StationModelESMinus8Minus150W captures enum value "ES-8-150W"
	StationModelESMinus8Minus150W string = "ES-8-150W"

	// StationModelESMinus16MinusXG captures enum value "ES-16-XG"
	StationModelESMinus16MinusXG string = "ES-16-XG"

	// StationModelESMinus10XP captures enum value "ES-10XP"
	StationModelESMinus10XP string = "ES-10XP"

	// StationModelESMinus10X captures enum value "ES-10X"
	StationModelESMinus10X string = "ES-10X"

	// StationModelESMinus18X captures enum value "ES-18X"
	StationModelESMinus18X string = "ES-18X"

	// StationModelESMinus26X captures enum value "ES-26X"
	StationModelESMinus26X string = "ES-26X"

	// StationModelEPMinus54VMinus150W captures enum value "EP-54V-150W"
	StationModelEPMinus54VMinus150W string = "EP-54V-150W"

	// StationModelEPMinus24VMinus72W captures enum value "EP-24V-72W"
	StationModelEPMinus24VMinus72W string = "EP-24V-72W"

	// StationModelEPMinus54VMinus72W captures enum value "EP-54V-72W"
	StationModelEPMinus54VMinus72W string = "EP-54V-72W"

	// StationModelTSWMinusPoE captures enum value "TSW-PoE"
	StationModelTSWMinusPoE string = "TSW-PoE"

	// StationModelTSWMinusPoEPRO captures enum value "TSW-PoE PRO"
	StationModelTSWMinusPoEPRO string = "TSW-PoE PRO"

	// StationModelACBMinusAC captures enum value "ACB-AC"
	StationModelACBMinusAC string = "ACB-AC"

	// StationModelACBMinusISP captures enum value "ACB-ISP"
	StationModelACBMinusISP string = "ACB-ISP"

	// StationModelACBMinusLOCO captures enum value "ACB-LOCO"
	StationModelACBMinusLOCO string = "ACB-LOCO"

	// StationModelAF11FX captures enum value "AF11FX"
	StationModelAF11FX string = "AF11FX"

	// StationModelAF24 captures enum value "AF24"
	StationModelAF24 string = "AF24"

	// StationModelAF24HD captures enum value "AF24HD"
	StationModelAF24HD string = "AF24HD"

	// StationModelAF2X captures enum value "AF2X"
	StationModelAF2X string = "AF2X"

	// StationModelAF3X captures enum value "AF3X"
	StationModelAF3X string = "AF3X"

	// StationModelAF4X captures enum value "AF4X"
	StationModelAF4X string = "AF4X"

	// StationModelAF5 captures enum value "AF5"
	StationModelAF5 string = "AF5"

	// StationModelAF5U captures enum value "AF5U"
	StationModelAF5U string = "AF5U"

	// StationModelAF5X captures enum value "AF5X"
	StationModelAF5X string = "AF5X"

	// StationModelAFMinus5XHD captures enum value "AF-5XHD"
	StationModelAFMinus5XHD string = "AF-5XHD"

	// StationModelAFMinusLTU captures enum value "AF-LTU"
	StationModelAFMinusLTU string = "AF-LTU"

	// StationModelLTUMinusLITE captures enum value "LTU-LITE"
	StationModelLTUMinusLITE string = "LTU-LITE"

	// StationModelAFMinusLTU5 captures enum value "AF-LTU5"
	StationModelAFMinusLTU5 string = "AF-LTU5"

	// StationModelLTUMinusRocket captures enum value "LTU-Rocket"
	StationModelLTUMinusRocket string = "LTU-Rocket"

	// StationModelAFLTULR captures enum value "AFLTULR"
	StationModelAFLTULR string = "AFLTULR"

	// StationModelAF60 captures enum value "AF60"
	StationModelAF60 string = "AF60"

	// StationModelAF60MinusLR captures enum value "AF60-LR"
	StationModelAF60MinusLR string = "AF60-LR"

	// StationModelWaveAP captures enum value "WaveAP"
	StationModelWaveAP string = "WaveAP"

	// StationModelWaveCPE captures enum value "WaveCPE"
	StationModelWaveCPE string = "WaveCPE"

	// StationModelGBEMinusLR captures enum value "GBE-LR"
	StationModelGBEMinusLR string = "GBE-LR"

	// StationModelGBE captures enum value "GBE"
	StationModelGBE string = "GBE"

	// StationModelGBEMinusPlus captures enum value "GBE-Plus"
	StationModelGBEMinusPlus string = "GBE-Plus"

	// StationModelGBEMinusAP captures enum value "GBE-AP"
	StationModelGBEMinusAP string = "GBE-AP"

	// StationModelR2N captures enum value "R2N"
	StationModelR2N string = "R2N"

	// StationModelR2T captures enum value "R2T"
	StationModelR2T string = "R2T"

	// StationModelR5N captures enum value "R5N"
	StationModelR5N string = "R5N"

	// StationModelR6N captures enum value "R6N"
	StationModelR6N string = "R6N"

	// StationModelR36MinusGPS captures enum value "R36-GPS"
	StationModelR36MinusGPS string = "R36-GPS"

	// StationModelRM3MinusGPS captures enum value "RM3-GPS"
	StationModelRM3MinusGPS string = "RM3-GPS"

	// StationModelR2NMinusGPS captures enum value "R2N-GPS"
	StationModelR2NMinusGPS string = "R2N-GPS"

	// StationModelR5NMinusGPS captures enum value "R5N-GPS"
	StationModelR5NMinusGPS string = "R5N-GPS"

	// StationModelR9NMinusGPS captures enum value "R9N-GPS"
	StationModelR9NMinusGPS string = "R9N-GPS"

	// StationModelR5TMinusGPS captures enum value "R5T-GPS"
	StationModelR5TMinusGPS string = "R5T-GPS"

	// StationModelRM3 captures enum value "RM3"
	StationModelRM3 string = "RM3"

	// StationModelR36 captures enum value "R36"
	StationModelR36 string = "R36"

	// StationModelR9N captures enum value "R9N"
	StationModelR9N string = "R9N"

	// StationModelN2N captures enum value "N2N"
	StationModelN2N string = "N2N"

	// StationModelN5N captures enum value "N5N"
	StationModelN5N string = "N5N"

	// StationModelN6N captures enum value "N6N"
	StationModelN6N string = "N6N"

	// StationModelNS3 captures enum value "NS3"
	StationModelNS3 string = "NS3"

	// StationModelN36 captures enum value "N36"
	StationModelN36 string = "N36"

	// StationModelN9N captures enum value "N9N"
	StationModelN9N string = "N9N"

	// StationModelN9S captures enum value "N9S"
	StationModelN9S string = "N9S"

	// StationModelLM2 captures enum value "LM2"
	StationModelLM2 string = "LM2"

	// StationModelLM5 captures enum value "LM5"
	StationModelLM5 string = "LM5"

	// StationModelB2N captures enum value "B2N"
	StationModelB2N string = "B2N"

	// StationModelB2T captures enum value "B2T"
	StationModelB2T string = "B2T"

	// StationModelB5N captures enum value "B5N"
	StationModelB5N string = "B5N"

	// StationModelB5T captures enum value "B5T"
	StationModelB5T string = "B5T"

	// StationModelBAC captures enum value "BAC"
	StationModelBAC string = "BAC"

	// StationModelAG2 captures enum value "AG2"
	StationModelAG2 string = "AG2"

	// StationModelAG2MinusHP captures enum value "AG2-HP"
	StationModelAG2MinusHP string = "AG2-HP"

	// StationModelAG5 captures enum value "AG5"
	StationModelAG5 string = "AG5"

	// StationModelAG5MinusHP captures enum value "AG5-HP"
	StationModelAG5MinusHP string = "AG5-HP"

	// StationModelP2N captures enum value "p2N"
	StationModelP2N string = "p2N"

	// StationModelP5N captures enum value "p5N"
	StationModelP5N string = "p5N"

	// StationModelM25 captures enum value "M25"
	StationModelM25 string = "M25"

	// StationModelP2BMinus400 captures enum value "P2B-400"
	StationModelP2BMinus400 string = "P2B-400"

	// StationModelP5BMinus300 captures enum value "P5B-300"
	StationModelP5BMinus300 string = "P5B-300"

	// StationModelP5BMinus300MinusISO captures enum value "P5B-300-ISO"
	StationModelP5BMinus300MinusISO string = "P5B-300-ISO"

	// StationModelP5BMinus400 captures enum value "P5B-400"
	StationModelP5BMinus400 string = "P5B-400"

	// StationModelP5BMinus400MinusISO captures enum value "P5B-400-ISO"
	StationModelP5BMinus400MinusISO string = "P5B-400-ISO"

	// StationModelP5BMinus620 captures enum value "P5B-620"
	StationModelP5BMinus620 string = "P5B-620"

	// StationModelLB5Minus120 captures enum value "LB5-120"
	StationModelLB5Minus120 string = "LB5-120"

	// StationModelLB5 captures enum value "LB5"
	StationModelLB5 string = "LB5"

	// StationModelN5B captures enum value "N5B"
	StationModelN5B string = "N5B"

	// StationModelN5BMinus16 captures enum value "N5B-16"
	StationModelN5BMinus16 string = "N5B-16"

	// StationModelN5BMinus19 captures enum value "N5B-19"
	StationModelN5BMinus19 string = "N5B-19"

	// StationModelN5BMinus300 captures enum value "N5B-300"
	StationModelN5BMinus300 string = "N5B-300"

	// StationModelN5BMinus400 captures enum value "N5B-400"
	StationModelN5BMinus400 string = "N5B-400"

	// StationModelN5BMinusClient captures enum value "N5B-Client"
	StationModelN5BMinusClient string = "N5B-Client"

	// StationModelN2B captures enum value "N2B"
	StationModelN2B string = "N2B"

	// StationModelN2BMinus13 captures enum value "N2B-13"
	StationModelN2BMinus13 string = "N2B-13"

	// StationModelN2BMinus400 captures enum value "N2B-400"
	StationModelN2BMinus400 string = "N2B-400"

	// StationModelPAP captures enum value "PAP"
	StationModelPAP string = "PAP"

	// StationModelLAPMinusHP captures enum value "LAP-HP"
	StationModelLAPMinusHP string = "LAP-HP"

	// StationModelLAP captures enum value "LAP"
	StationModelLAP string = "LAP"

	// StationModelAGW captures enum value "AGW"
	StationModelAGW string = "AGW"

	// StationModelAGWMinusLR captures enum value "AGW-LR"
	StationModelAGWMinusLR string = "AGW-LR"

	// StationModelAGWMinusPro captures enum value "AGW-Pro"
	StationModelAGWMinusPro string = "AGW-Pro"

	// StationModelAGWMinusInstaller captures enum value "AGW-Installer"
	StationModelAGWMinusInstaller string = "AGW-Installer"

	// StationModelPB5 captures enum value "PB5"
	StationModelPB5 string = "PB5"

	// StationModelPB3 captures enum value "PB3"
	StationModelPB3 string = "PB3"

	// StationModelP36 captures enum value "P36"
	StationModelP36 string = "P36"

	// StationModelPBM10 captures enum value "PBM10"
	StationModelPBM10 string = "PBM10"

	// StationModelNB5 captures enum value "NB5"
	StationModelNB5 string = "NB5"

	// StationModelNB2 captures enum value "NB2"
	StationModelNB2 string = "NB2"

	// StationModelNB3 captures enum value "NB3"
	StationModelNB3 string = "NB3"

	// StationModelB36 captures enum value "B36"
	StationModelB36 string = "B36"

	// StationModelNB9 captures enum value "NB9"
	StationModelNB9 string = "NB9"

	// StationModelSM5 captures enum value "SM5"
	StationModelSM5 string = "SM5"

	// StationModelWM5 captures enum value "WM5"
	StationModelWM5 string = "WM5"

	// StationModelISMinusM5 captures enum value "IS-M5"
	StationModelISMinusM5 string = "IS-M5"

	// StationModelLoco5AC captures enum value "Loco5AC"
	StationModelLoco5AC string = "Loco5AC"

	// StationModelNSMinus5AC captures enum value "NS-5AC"
	StationModelNSMinus5AC string = "NS-5AC"

	// StationModelR5ACMinusPTMP captures enum value "R5AC-PTMP"
	StationModelR5ACMinusPTMP string = "R5AC-PTMP"

	// StationModelR5ACMinusPTP captures enum value "R5AC-PTP"
	StationModelR5ACMinusPTP string = "R5AC-PTP"

	// StationModelR5ACMinusLite captures enum value "R5AC-Lite"
	StationModelR5ACMinusLite string = "R5AC-Lite"

	// StationModelR5ACMinusPRISM captures enum value "R5AC-PRISM"
	StationModelR5ACMinusPRISM string = "R5AC-PRISM"

	// StationModelR2ACMinusPrism captures enum value "R2AC-Prism"
	StationModelR2ACMinusPrism string = "R2AC-Prism"

	// StationModelR2ACMinusGen2 captures enum value "R2AC-Gen2"
	StationModelR2ACMinusGen2 string = "R2AC-Gen2"

	// StationModelRPMinus5ACMinusGen2 captures enum value "RP-5AC-Gen2"
	StationModelRPMinus5ACMinusGen2 string = "RP-5AC-Gen2"

	// StationModelNBEMinus2ACMinus13 captures enum value "NBE-2AC-13"
	StationModelNBEMinus2ACMinus13 string = "NBE-2AC-13"

	// StationModelNBEMinus5ACMinus16 captures enum value "NBE-5AC-16"
	StationModelNBEMinus5ACMinus16 string = "NBE-5AC-16"

	// StationModelNBEMinus5ACMinus19 captures enum value "NBE-5AC-19"
	StationModelNBEMinus5ACMinus19 string = "NBE-5AC-19"

	// StationModelNBEMinus5ACMinusGen2 captures enum value "NBE-5AC-Gen2"
	StationModelNBEMinus5ACMinusGen2 string = "NBE-5AC-Gen2"

	// StationModelPBEMinus5ACMinus300 captures enum value "PBE-5AC-300"
	StationModelPBEMinus5ACMinus300 string = "PBE-5AC-300"

	// StationModelPBEMinus5ACMinus300MinusISO captures enum value "PBE-5AC-300-ISO"
	StationModelPBEMinus5ACMinus300MinusISO string = "PBE-5AC-300-ISO"

	// StationModelPBEMinus5ACMinus400 captures enum value "PBE-5AC-400"
	StationModelPBEMinus5ACMinus400 string = "PBE-5AC-400"

	// StationModelPBEMinus5ACMinus400MinusISO captures enum value "PBE-5AC-400-ISO"
	StationModelPBEMinus5ACMinus400MinusISO string = "PBE-5AC-400-ISO"

	// StationModelPBEMinus5ACMinus500 captures enum value "PBE-5AC-500"
	StationModelPBEMinus5ACMinus500 string = "PBE-5AC-500"

	// StationModelPBEMinus5ACMinus500MinusISO captures enum value "PBE-5AC-500-ISO"
	StationModelPBEMinus5ACMinus500MinusISO string = "PBE-5AC-500-ISO"

	// StationModelPBEMinus5ACMinus620 captures enum value "PBE-5AC-620"
	StationModelPBEMinus5ACMinus620 string = "PBE-5AC-620"

	// StationModelPBEMinus5ACMinus620MinusISO captures enum value "PBE-5AC-620-ISO"
	StationModelPBEMinus5ACMinus620MinusISO string = "PBE-5AC-620-ISO"

	// StationModelPBEMinus2ACMinus400 captures enum value "PBE-2AC-400"
	StationModelPBEMinus2ACMinus400 string = "PBE-2AC-400"

	// StationModelPBEMinus2ACMinus400MinusISO captures enum value "PBE-2AC-400-ISO"
	StationModelPBEMinus2ACMinus400MinusISO string = "PBE-2AC-400-ISO"

	// StationModelPBEMinus5ACMinusXMinusGen2 captures enum value "PBE-5AC-X-Gen2"
	StationModelPBEMinus5ACMinusXMinusGen2 string = "PBE-5AC-X-Gen2"

	// StationModelPBEMinus5ACMinusGen2 captures enum value "PBE-5AC-Gen2"
	StationModelPBEMinus5ACMinusGen2 string = "PBE-5AC-Gen2"

	// StationModelPBEMinus5ACMinusISOMinusGen2 captures enum value "PBE-5AC-ISO-Gen2"
	StationModelPBEMinus5ACMinusISOMinusGen2 string = "PBE-5AC-ISO-Gen2"

	// StationModelPBEMinus5ACMinus400MinusISOMinusGen2 captures enum value "PBE-5AC-400-ISO-Gen2"
	StationModelPBEMinus5ACMinus400MinusISOMinusGen2 string = "PBE-5AC-400-ISO-Gen2"

	// StationModelLBEMinus5ACMinus16Minus120 captures enum value "LBE-5AC-16-120"
	StationModelLBEMinus5ACMinus16Minus120 string = "LBE-5AC-16-120"

	// StationModelLAPMinus120 captures enum value "LAP-120"
	StationModelLAPMinus120 string = "LAP-120"

	// StationModelLBEMinus5ACMinus23 captures enum value "LBE-5AC-23"
	StationModelLBEMinus5ACMinus23 string = "LBE-5AC-23"

	// StationModelLBEMinus5ACMinusGen2 captures enum value "LBE-5AC-Gen2"
	StationModelLBEMinus5ACMinusGen2 string = "LBE-5AC-Gen2"

	// StationModelLBEMinus5ACMinusLR captures enum value "LBE-5AC-LR"
	StationModelLBEMinus5ACMinusLR string = "LBE-5AC-LR"

	// StationModelLAPMinusGPS captures enum value "LAP-GPS"
	StationModelLAPMinusGPS string = "LAP-GPS"

	// StationModelISMinus5AC captures enum value "IS-5AC"
	StationModelISMinus5AC string = "IS-5AC"

	// StationModelPSMinus5AC captures enum value "PS-5AC"
	StationModelPSMinus5AC string = "PS-5AC"

	// StationModelSolarSwitch captures enum value "SolarSwitch"
	StationModelSolarSwitch string = "SolarSwitch"

	// StationModelSolarPoint captures enum value "SolarPoint"
	StationModelSolarPoint string = "SolarPoint"

	// StationModelBulletACMinusIP67 captures enum value "BulletAC-IP67"
	StationModelBulletACMinusIP67 string = "BulletAC-IP67"

	// StationModelBMinusDBMinusAC captures enum value "B-DB-AC"
	StationModelBMinusDBMinusAC string = "B-DB-AC"

	// StationModelUNKNOWN captures enum value "UNKNOWN"
	StationModelUNKNOWN string = "UNKNOWN"
)

// prop value enum
func (m *Station) validateModelEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, stationTypeModelPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *Station) validateModel(formats strfmt.Registry) error {
	if swag.IsZero(m.Model) { // not required
		return nil
	}

	// value enum
	if err := m.validateModelEnum("model", "body", m.Model); err != nil {
		return err
	}

	return nil
}

func (m *Station) validateNoiseFloor(formats strfmt.Registry) error {

	if err := validate.Required("noiseFloor", "body", m.NoiseFloor); err != nil {
		return err
	}

	return nil
}

var stationTypeRadioPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["2.4GHz","3GHz","4GHz","5GHz","11GHz","24GHz","60GHz"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		stationTypeRadioPropEnum = append(stationTypeRadioPropEnum, v)
	}
}

const (

	// StationRadioNr2Dot4GHz captures enum value "2.4GHz"
	StationRadioNr2Dot4GHz string = "2.4GHz"

	// StationRadioNr3GHz captures enum value "3GHz"
	StationRadioNr3GHz string = "3GHz"

	// StationRadioNr4GHz captures enum value "4GHz"
	StationRadioNr4GHz string = "4GHz"

	// StationRadioNr5GHz captures enum value "5GHz"
	StationRadioNr5GHz string = "5GHz"

	// StationRadioNr11GHz captures enum value "11GHz"
	StationRadioNr11GHz string = "11GHz"

	// StationRadioNr24GHz captures enum value "24GHz"
	StationRadioNr24GHz string = "24GHz"

	// StationRadioNr60GHz captures enum value "60GHz"
	StationRadioNr60GHz string = "60GHz"
)

// prop value enum
func (m *Station) validateRadioEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, stationTypeRadioPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *Station) validateRadio(formats strfmt.Registry) error {
	if swag.IsZero(m.Radio) { // not required
		return nil
	}

	// value enum
	if err := m.validateRadioEnum("radio", "body", m.Radio); err != nil {
		return err
	}

	return nil
}

func (m *Station) validateRxChain(formats strfmt.Registry) error {

	if err := validate.Required("rxChain", "body", m.RxChain); err != nil {
		return err
	}

	if err := m.RxChain.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("rxChain")
		}
		return err
	}

	return nil
}

func (m *Station) validateRxChainMask(formats strfmt.Registry) error {

	if err := validate.Required("rxChainMask", "body", m.RxChainMask); err != nil {
		return err
	}

	return nil
}

func (m *Station) validateStatistics(formats strfmt.Registry) error {
	if swag.IsZero(m.Statistics) { // not required
		return nil
	}

	if m.Statistics != nil {
		if err := m.Statistics.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("statistics")
			}
			return err
		}
	}

	return nil
}

func (m *Station) validateTimestamp(formats strfmt.Registry) error {
	if swag.IsZero(m.Timestamp) { // not required
		return nil
	}

	if err := validate.FormatOf("timestamp", "body", "date", m.Timestamp.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *Station) validateTxChain(formats strfmt.Registry) error {

	if err := validate.Required("txChain", "body", m.TxChain); err != nil {
		return err
	}

	if err := m.TxChain.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("txChain")
		}
		return err
	}

	return nil
}

func (m *Station) validateTxChainMask(formats strfmt.Registry) error {

	if err := validate.Required("txChainMask", "body", m.TxChainMask); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this station based on the context it is used
func (m *Station) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateDeviceIdentification(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateFirmware(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateRxChain(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateStatistics(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateTxChain(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Station) contextValidateDeviceIdentification(ctx context.Context, formats strfmt.Registry) error {

	if m.DeviceIdentification != nil {
		if err := m.DeviceIdentification.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("deviceIdentification")
			}
			return err
		}
	}

	return nil
}

func (m *Station) contextValidateFirmware(ctx context.Context, formats strfmt.Registry) error {

	if m.Firmware != nil {
		if err := m.Firmware.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("firmware")
			}
			return err
		}
	}

	return nil
}

func (m *Station) contextValidateRxChain(ctx context.Context, formats strfmt.Registry) error {

	if err := m.RxChain.ContextValidate(ctx, formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("rxChain")
		}
		return err
	}

	return nil
}

func (m *Station) contextValidateStatistics(ctx context.Context, formats strfmt.Registry) error {

	if m.Statistics != nil {
		if err := m.Statistics.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("statistics")
			}
			return err
		}
	}

	return nil
}

func (m *Station) contextValidateTxChain(ctx context.Context, formats strfmt.Registry) error {

	if err := m.TxChain.ContextValidate(ctx, formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("txChain")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Station) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Station) UnmarshalBinary(b []byte) error {
	var res Station
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
